git add .   //para todo
git add file //para algo
git diff //para ver dif que no esten add
git diff --staged //para ver dif que si esten add
git reset HEAD file //para quidar del add
git commit -m "algo" //para comit
git status //ver como estan los adds para el comid
git checkout -- file  //para dejarlo com el commit anterior
git log  //trae todos los logs
git log --oneline //trae todos lso cmits resumidos
git show [id commit]//cada show de cada comid por 

git checkout -- "nombre del archivo" //devolverlo al commit anterior
git log --oneline | wc -l // contar lineas de commits


ramas
git branch // listado de ramas
git branch "nombre" //crea rama
git checkout "nombre rama" // pasarse
git checkout -b "nombre rama" //crea la rama y nos ubica
git branch -m "nombre nuevo" //cambia nombre
git merge "rama" // rama master se actualiza con otra rama
git log --oneline --graph --all // muestra los commits con su rama
git branch -d "nombre" // borrar rama commited
git branch -D "nombre" // borrar rama sin commit



.gitignore
carpeta/nombre  //solo los que cumplan la condicion
nombre // ignora todo lo de es enombre o carpeta
*.log  //ignorar todo los archivos


    git clone <url> - clona un repositorio.
    git remote add <nombre> <url> - configura un repositorio remoto.
    git remote - lista los repositorios remotos.
    git push -u <remoto> <rama> - sincroniza la rama con la remota por primera vez.
    git push - envía los nuevos commits a la rama remota.
    git push -f <remoto> <rama> - reemplaza la rama remota con el historial de la rama local.
    git pull - actualiza los commits de la rama remota.
    git checkout <rama> - descarga la rama del remoto si no existe localmente.
    git fetch <remoto> - actualiza la información del repositorio remoto.
    git rebase <remoto>/<rama> - rebasa la rama local contra la remota.